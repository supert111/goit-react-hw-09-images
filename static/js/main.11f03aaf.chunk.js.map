{"version":3,"sources":["components/ImageGalleryItem/ImageGalleryItem.module.css","components/Modal/Modal.module.css","components/ImageGallery/ImageGallery.module.css","components/Loader/Loader.module.css","components/Button/Button.module.css","App.module.css","components/Searchbar/Searchbar.module.css","components/Searchbar/Searchbar.jsx","components/ImageGallery/ImageGallery.jsx","components/ImageGalleryItem/ImageGalleryItem.jsx","components/Loader/Loader.jsx","components/Button/Button.jsx","components/Modal/Modal.jsx","api/data.api.js","App.js","index.js"],"names":["module","exports","Searchbar","onSubmit","useState","query","setQuery","className","styles","element","preventDefault","SearchForm","type","SearchForm_button","SearchForm_button_label","SearchForm_input","value","onChange","currentTarget","autoComplete","autoFocus","placeholder","ImageGallery","children","ImageGalleryitem","hits","onClick","map","id","webformatURL","ImageGalleryItem","src","alt","ImageGalleryItem_image","Loader","loader_circle","color","height","width","Component","Button","modalRoot","document","querySelector","Modal","onClose","useEffect","window","addEventListener","handleKeyDown","removeEventListener","e","code","createPortal","Overlay","target","URL","fetchPhoto","searchQuery","currentPage","pageSize","axios","get","then","response","data","App","setHits","setCurrentPage","seachQuery","setSeachQuery","isLoading","setIsLoading","error","setError","showModal","setShowModal","bigImageURL","setBigImageURL","prevState","catch","finally","scrollTo","top","documentElement","scrollHeight","behavior","toggleModal","shouldRenderLoadMoreButton","length","idImg","largeImageURL","find","item","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.11f03aaf.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"ImageGalleryItem\":\"ImageGalleryItem_ImageGalleryItem__1qsym\",\"ImageGalleryItem_image\":\"ImageGalleryItem_ImageGalleryItem_image__1F6_q\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Overlay\":\"Modal_Overlay__1Nzq2\",\"Modal\":\"Modal_Modal__1e6s0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ImageGallery\":\"ImageGallery_ImageGallery__2zmZp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loader_circle\":\"Loader_loader_circle__1cQ2I\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Button\":\"Button_Button__E2Rnr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__2TORI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Searchbar\":\"Searchbar_Searchbar__c35Cz\",\"SearchForm\":\"Searchbar_SearchForm__1GJ1L\",\"SearchForm_button\":\"Searchbar_SearchForm_button__1bRru\",\"SearchForm_button_label\":\"Searchbar_SearchForm_button_label__1TEUd\",\"SearchForm_input\":\"Searchbar_SearchForm_input__2il8D\"};","import PropTypes from 'prop-types';\r\nimport { useState } from 'react';\r\nimport styles from './Searchbar.module.css';\r\n\r\nexport default function Searchbar ({ onSubmit }) {\r\n    const [query, setQuery] = useState('');\r\n\r\n\r\n    const handleChange = element => {\r\n        setQuery(element.currentTarget.value)\r\n        //this.setState({ query: element.currentTarget.value });\r\n    };\r\n\r\n    const handleSubmit = element => {\r\n        element.preventDefault();\r\n        onSubmit(query);\r\n        // this.props.onSubmit(this.state.query);\r\n        setQuery('');\r\n    };\r\n\r\n        return (\r\n            <header className={styles.Searchbar}>\r\n                <form onSubmit={handleSubmit} className={styles.SearchForm}>\r\n                    <button type=\"submit\" className={styles.SearchForm_button}>\r\n                        <span className={styles.SearchForm_button_label}>Search</span>\r\n                    </button>\r\n\r\n                    <input\r\n                        className={styles.SearchForm_input}\r\n                        type=\"text\"\r\n                        value={query}\r\n                        onChange ={handleChange}\r\n                        autoComplete=\"off\"\r\n                        autoFocus\r\n                        placeholder=\"Search images and photos\"\r\n                    />\r\n                </form>\r\n            </header>\r\n        )\r\n    }\r\n\r\nSearchbar.propTypes = {\r\n    onSubmit: PropTypes.func.isRequired,\r\n}\r\n","import PropTypes from 'prop-types';\r\nimport styles from './ImageGallery.module.css';\r\n\r\nconst ImageGallery = ({children}) => { \r\n    \r\n        return (\r\n            <div className=\"second-component\">\r\n                <ul className={styles.ImageGallery}>\r\n                    {children}\r\n                </ul>\r\n            </div>\r\n        );\r\n}\r\n\r\nImageGallery.propTypes = {\r\n    children: PropTypes.node.isRequired,\r\n}\r\n\r\nexport default ImageGallery;","import PropTypes from 'prop-types';\r\nimport styles from './ImageGalleryItem.module.css';\r\n\r\nconst ImageGalleryitem = ({ hits, onClick }) => {\r\n    return (\r\n        <>\r\n            { hits.map(({ id, webformatURL }) =>  ( \r\n                <li key={id} onClick={()=>onClick(id) } className={styles.ImageGalleryItem}>\r\n                    <img id={id} src={webformatURL} alt=\"\" className={styles.ImageGalleryItem_image} />\r\n                </li>\r\n            )) }\r\n        </>\r\n    \r\n    )\r\n}\r\n\r\nImageGalleryitem.propTypes = {\r\n    hits: PropTypes.arrayOf(\r\n        PropTypes.shape({\r\n            id: PropTypes.number.isRequired,\r\n            webformatURL: PropTypes.string.isRequired,\r\n        })\r\n    ),\r\n    onClick: PropTypes.func.isRequired,\r\n}\r\n\r\nexport default ImageGalleryitem;","import { Component } from 'react';\r\nimport \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\";\r\nimport LoaderSpiner from \"react-loader-spinner\";\r\nimport styles from './Loader.module.css';\r\n\r\nclass Loader extends Component {\r\n  //other logic\r\n  render() {\r\n    return (\r\n      <LoaderSpiner className={styles.loader_circle}\r\n        type=\"ThreeDots\"\r\n        color=\"#00BFFF\"\r\n        height={80}\r\n        width={80}\r\n        // timeout={3000} //3 secs\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nexport default Loader;\r\n\r\n","import PropTypes from 'prop-types';\r\nimport styles from './Button.module.css';\r\n\r\nconst Button = ({ children, onClick}) => (\r\n    <button type=\"button\" className={styles.Button} onClick={onClick} >\r\n        Load more {children}\r\n    </button>\r\n);\r\n\r\nButton.propTypes = {\r\n    onClick: PropTypes.func.isRequired,\r\n    children: PropTypes.node,\r\n}\r\n\r\nexport default Button;","import PropTypes from 'prop-types';\r\nimport { useEffect } from 'react';\r\nimport { createPortal } from 'react-dom';\r\nimport styles from './Modal.module.css';\r\n\r\n const modalRoot = document.querySelector('#modal-root');\r\n\r\n export default function Modal ({children, onClose}) {\r\n    useEffect(() => {\r\n        window.addEventListener('keydown', handleKeyDown);\r\n        return () => {\r\n            window.removeEventListener('keydown', handleKeyDown);\r\n        };\r\n    })\r\n    // componentDidMount() {\r\n    //     window.addEventListener('keydown', this.handleKeyDown);\r\n    // }\r\n\r\n    // componentWillUnmount() {\r\n    //     window.removeEventListener('keydown', this.handleKeyDown);\r\n    // }\r\n\r\n    const handleKeyDown = e => {\r\n        if(e.code === 'Escape') {\r\n            onClose();\r\n        }\r\n    }\r\n\r\n    const handleBackdropClick = e => {\r\n        if(e.currentTarget === e.target) {\r\n            onClose();\r\n        }\r\n    }\r\n\r\n\r\n        return createPortal (\r\n            <div className={styles.Overlay} onClick={handleBackdropClick}>\r\n                <div className={styles.Modal}>\r\n                    { children }\r\n                </div>\r\n            </div>,\r\n             modalRoot,\r\n        )\r\n    }\r\n\r\n\r\nModal.propTypes = {\r\n    onClick: PropTypes.func,\r\n    onClose: PropTypes.func,\r\n    children: PropTypes.node,\r\n}","import axios from 'axios';\r\n\r\nconst BASE_URL = 'https://pixabay.com/api/';\r\nconst  KEY = '20667930-64a6ab52d11330f7fc72003b0';\r\nconst URL = `${BASE_URL}?key=${KEY}`;\r\n\r\nconst fetchPhoto = (searchQuery = '', currentPage = 1, pageSize = 12) => {\r\n    return axios\r\n        .get (\r\n            `${URL}&q=${searchQuery}&image_type=photo&per_page=${pageSize}&page=${currentPage}`,\r\n        )\r\n        .then(response => response.data.hits);\r\n};\r\n\r\nexport default fetchPhoto;  ","import { useState, useEffect } from 'react';\r\nimport Searchbar from './components/Searchbar/Searchbar';\r\nimport ImageGallery from './components/ImageGallery/ImageGallery';\r\nimport ImageGalleryItem from './components/ImageGalleryItem/ImageGalleryItem';\r\nimport Loader from './components/Loader/Loader';\r\nimport Button from './components/Button/Button';\r\nimport Modal from './components/Modal/Modal';\r\nimport fetchPhoto from './api/data.api';\r\nimport styles from './App.module.css';\r\n\r\nexport default function App () {\r\n    const [hits, setHits] = useState([]);\r\n    const [currentPage, setCurrentPage] = useState(1);\r\n    const [seachQuery, setSeachQuery] = useState('');\r\n    const [isLoading, setIsLoading] = useState(false);\r\n    const [error, setError] = useState(null);\r\n    const [showModal, setShowModal] = useState(false);\r\n    const [bigImageURL, setBigImageURL] = useState('');\r\n\r\n    useEffect(() => {\r\n        if (seachQuery) {\r\n            setIsLoading(true);\r\n\r\n            fetchPhoto(seachQuery, currentPage)\r\n                .then(hits => { \r\n                    setHits(prevState => [...prevState, ...hits]);\r\n                })\r\n                .catch(error => setError({error}))\r\n                .finally(() => {\r\n                    setIsLoading(false);\r\n                    window.scrollTo({\r\n                        top: document.documentElement.scrollHeight,\r\n                        behavior: 'smooth',\r\n                    });\r\n                });\r\n        }\r\n    },[seachQuery, currentPage]);\r\n\r\n\r\n    const fetchImages = () => {\r\n        setCurrentPage(prevState => (prevState + 1));\r\n        setSeachQuery(seachQuery);       \r\n    };\r\n\r\n    const onChangeQuery = query => {\r\n        setSeachQuery(query);\r\n        setCurrentPage(1);\r\n        setHits([]);\r\n        setError(null);\r\n    };\r\n\r\n    const toggleModal = () => {\r\n        setShowModal(({showModal}) => ({\r\n            showModal: !showModal,\r\n        }))\r\n    }\r\n\r\n    const searchBigImg = (idImg) => {\r\n        const searchIdImg = hits.find( item => item.id === idImg);\r\n        const { largeImageURL } = searchIdImg;\r\n        setBigImageURL(largeImageURL);\r\n        toggleModal();\r\n    }\r\n\r\n        const shouldRenderLoadMoreButton = hits.length > 0 && !isLoading;\r\n\r\n        return (\r\n            <div className={styles.App}> \r\n                <Searchbar onSubmit={onChangeQuery}/>\r\n                {error && <h1>Try entering another request</h1>}\r\n                <ImageGallery>\r\n                    <ImageGalleryItem hits={hits} onClick={searchBigImg}/>\r\n                </ImageGallery> \r\n                {isLoading && <Loader />}\r\n                {shouldRenderLoadMoreButton && <Button onClick={fetchImages}/>}\r\n                {showModal && <Modal onClose={toggleModal}> <img src={ bigImageURL } alt=\"\" /> </Modal> }\r\n            </div>    \r\n        );\r\n    }\r\n\r\n\r\n\r\n\r\n////////////////////////////////////////////////////\r\n// import { Component } from 'react';\r\n// import Searchbar from './components/Searchbar/Searchbar';\r\n// import ImageGallery from './components/ImageGallery/ImageGallery';\r\n// import ImageGalleryItem from './components/ImageGalleryItem/ImageGalleryItem';\r\n// import Loader from './components/Loader/Loader';\r\n// import Button from './components/Button/Button';\r\n// import Modal from './components/Modal/Modal';\r\n// import fetchPhoto from './api/data.api';\r\n// import styles from './App.module.css';\r\n\r\n// class App extends Component {\r\n//     state = {\r\n//         hits: [],\r\n//         currentPage: 1,\r\n//         seachQuery: '',\r\n//         isLoading: false,\r\n//         error: null,\r\n//         showModal: false,\r\n//         bigImageURL: '',\r\n//     };\r\n\r\n//     componentDidUpdate(prevProps, prevState) {\r\n//         if (prevState.seachQuery !== this.state.seachQuery) {\r\n//             this.fetchImages();\r\n//         }\r\n//     }\r\n\r\n//     fetchImages = () => {\r\n//         const { seachQuery, currentPage } = this.state;\r\n\r\n//         this.setState({isLoading: true});\r\n        \r\n//         fetchPhoto(seachQuery, currentPage)\r\n//             .then(hits => { \r\n//                 this.setState(prevState => ({\r\n//                     hits: [...prevState.hits, ...hits],\r\n//                     currentPage: prevState.currentPage + 1,\r\n//                 }));\r\n//             })\r\n//             .catch(error => this.setState({error}))\r\n//             .finally(() => {\r\n//                 this.setState({isLoading: false});\r\n//                 window.scrollTo({\r\n//                     top: document.documentElement.scrollHeight,\r\n//                     behavior: 'smooth',\r\n//                 });\r\n//             });\r\n//     };\r\n\r\n//     onChangeQuery = query => {\r\n//         this.setState({\r\n//             seachQuery: query,\r\n//             currentPage: 1,\r\n//             hits: [],\r\n//             error: null,\r\n//         });\r\n//     };\r\n\r\n//     toggleModal = () => {\r\n//         this.setState(({showModal}) => ({\r\n//             showModal: !showModal,\r\n//         }))\r\n//     }\r\n\r\n//     searchBigImg = (idImg) => {\r\n//         const { hits } = this.state;\r\n//         const searchIdImg = hits.find( item => item.id === idImg);\r\n//         const { largeImageURL } = searchIdImg;\r\n//         this.setState({ bigImageURL: largeImageURL });\r\n//         this.toggleModal();\r\n//     }\r\n\r\n//     render() {\r\n//         const { hits, isLoading, error, showModal, bigImageURL } = this.state;\r\n//         const shouldRenderLoadMoreButton = hits.length > 0 && !isLoading;\r\n\r\n//         return (\r\n//             <div className={styles.App}> \r\n//                 <Searchbar onSubmit={this.onChangeQuery}/>\r\n//                 {error && <h1>Try entering another request</h1>}\r\n//                 <ImageGallery>\r\n//                     <ImageGalleryItem hits={hits} onClick={this.searchBigImg}/>\r\n//                 </ImageGallery> \r\n//                 {isLoading && <Loader />}\r\n//                 {shouldRenderLoadMoreButton && <Button onClick={this.fetchImages}/>}\r\n//                 {showModal && <Modal onClose={this.toggleModal}> <img src={ bigImageURL } alt=\"\" /> </Modal> }\r\n//             </div>    \r\n//         );\r\n//     }\r\n// }\r\n\r\n// export default App;","import React from \"react\";\r\nimport ReactDOM from 'react-dom';\r\nimport App from \"./App\";\r\nimport './styles.css';\r\n\r\nReactDOM.render(\r\n   <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>\r\n  ,\r\n  document.getElementById('root')\r\n);"],"sourceRoot":""}